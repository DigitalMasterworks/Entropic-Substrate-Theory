#!/usr/bin/env python3



import sys, csv, re
from pathlib import Path

def read_table(path):
 buf = Path(path).read_text().strip().splitlines()
 rows = []

 try:
 reader = csv.reader(buf)
 for r in reader:
 if not r: continue

 toks = [t.strip() for t in r if t.strip()!='']
 if len(toks) >= 2 and re.match(r'^\d+$', toks[0]):
 rows.append((int(toks[0]), int(toks[1])))
 if rows:
 return rows
 except Exception:
 pass

 for line in buf:
 toks = re.split(r'[,\s]+', line.strip())
 if len(toks) >= 2 and re.match(r'^\d+$', toks[0]) and re.match(r'^-?\d+$', toks[1]):
 rows.append((int(toks[0]), int(toks[1])))
 return rows

if __name__ == "__main__":
 if len(sys.argv) < 2:
 print("Usage: python3 emit_bsd_lean.py data/bsd_ap_table.csv", file=sys.stderr)
 sys.exit(2)
 rows = read_table(sys.argv[1])
 name = Path(sys.argv[1]).stem
 print(f"/- AUTO-GENERATED file from {sys.argv[1]} -/")
 print("import Mathlib.Data.Rat")
 print("")
 print("-- This file was generated by tools/emit_bsd_lean.py")
 print(f"-- source: {sys.argv[1]}")
 print("")
 for p, ap in rows:

 thm_name = f"a_p_{p}"

 print(f"theorem {thm_name}: a_p {p} = {ap}:= by rfl")
 print("")
 print("-- end of generated file")